openapi: '3.0.3'
info:
  title: Cinema Seat Management API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
tags:
  - name: Cinema Seats
    description: Seat management for cinema rooms
  - name: Seat Reservation
    description: Reserve and release seats for shows
  - name: Seat Release
    description: Release reserved seats
  - name: Seat Validation
    description: Validate the status of seats in the cinema
paths:
  /v1/seats:
    get:
      tags:
        - Cinema Seats
      summary: Get all seats or search for specific seats
      description: Retrieve a list of all seats in the cinema or search for specific seats by row, and number.
      parameters:
        - name: status
          in: query
          description: Filter by seat status (e.g., available, reserved, occupied).
          schema:
            type: string
        - name: row
          in: query
          description: Filter by row or search for a specific row.
          schema:
            type: string
        - name: number
          in: query
          description: Search for a specific seat by number.
          schema:
            type: integer
      responses:
        '200':
          description: List of filtered seats or specific seat details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seat'
        '404':
          description: Seat not found
        '500':
          description: Internal server error

  /v1/seats/{id}:
    get:
      tags:
        - Cinema Seats
      summary: Get a seat by ID
      description: Retrieve details of a specific seat by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the seat to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Seat details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatResponse'
        '404':
          description: Seat not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Cinema Seats
      summary: Deactivate a seat by ID
      description: Mark a specific seat as inactive instead of deleting it.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the seat to deactivate.
          schema:
            type: string
      responses:
        '204':
          description: Seat deactivated successfully
        '404':
          description: Seat not found
        '500':
          description: Internal server error

  /v1/seats/reserve:
    post:
      tags:
        - Seat Reservation
      summary: Reserve seats temporarily
      description: Reserve one or more seats for a specific show for a limited time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seatIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of seat IDs to reserve
                showId:
                  type: string
                  format: uuid
                  description: ID of the show the seats are reserved for
                reservationExpiresAt:
                  type: string
                  format: date-time
                  description: Expiration time for the reservation
              required:
                - seatIds
                - showId
                - reservationExpiresAt
      responses:
        '200':
          description: Seats reserved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reserved:
                    type: boolean
                    description: Indicates if the reservation was successful
                  seatIds:
                    type: array
                    items:
                      type: string
                    description: List of seat IDs that were successfully reserved
                  reservationExpiresAt:
                    type: string
                    format: date-time
                    description: Expiration time for the reservation
        '400':
          description: Invalid input
        '404':
          description: One or more seats not found
        '409':
          description: One or more seats are already reserved or occupied
        '500':
          description: Internal server error

  /v1/seats/release:
    post:
      tags:
        - Seat Release
      summary: Release reserved seats
      description: Release one or more seats that were previously reserved.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seatIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of seat IDs to release
                showId:
                  type: string
                  format: uuid
                  description: ID of the show the seats are associated with
              required:
                - seatIds
                - showId
      responses:
        '200':
          description: Seats released successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  released:
                    type: boolean
                    description: Indicates if the release was successful
                  seatIds:
                    type: array
                    items:
                      type: string
                    description: List of seat IDs that were successfully released
        '400':
          description: Invalid input
        '404':
          description: One or more seats not found
        '500':
          description: Internal server error

  /v1/seats/validate:
    post:
      tags:
        - Seat Validation
      summary: Validate the status of seats
      description: Validate if the provided seats are reserved and their reservation has not expired.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seatIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of seat IDs to validate
                showId:
                  type: string
                  format: uuid
                  description: ID of the show the seats are associated with
              required:
                - seatIds
                - showId
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Indicates if all seats are valid
                  invalidSeats:
                    type: array
                    items:
                      type: string
                    description: List of seat IDs that are not valid
        '400':
          description: Invalid input
        '404':
          description: One or more seats not found
        '500':
          description: Internal server error

components:
  schemas:
    Seat:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the seat
        row:
          type: string
          description: Row of the seat
        number:
          type: integer
          description: Seat number
        status:
          type: string
          description: Status of the seat
          enum:
            - available
            - reserved
            - occupied
        reservationExpiresAt:
          type: string
          format: date-time
          description: Expiration time for the reservation (if reserved)
        isActive:
          type: boolean
          description: Indicates if the seat is active or deactivated

    SeatResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the seat
        row:
          type: string
          description: Row of the seat
        number:
          type: integer
          description: Seat number
        status:
          type: string
          description: Status of the seat
          enum:
            - available
            - reserved
            - occupied
        isActive:
          type: boolean
          description: Indicates if the seat is active or deactivated