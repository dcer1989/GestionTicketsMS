openapi: '3.0.3'
info:
  title: Cinema Payment Service API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
tags:
  - name: Payments Management
    description: Payment management for cinema tickets
  - name: Process Payments
    description: Process payments for ticket purchases
paths:
  /v1/payments:
    get:
      tags:
        - Payments Management
      summary: Get all payments
      description: Retrieve a list of all payments.
      responses:
        '200':
          description: List of all payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    post:
      tags:
        - Payments Management
      summary: Create a new payment
      description: Create a new payment record for a ticket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /v1/payments/{id}:
    get:
      tags:
        - Payments Management
      summary: Get a payment by ID
      description: Retrieve details of a specific payment by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the payment to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
    put:
      tags:
        - Payments Management
      summary: Update a payment by ID
      description: Update the details of a specific payment.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the payment to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
    delete:
      tags:
        - Payments Management
      summary: Delete a payment by ID
      description: Remove a specific payment from the system.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the payment to delete.
          schema:
            type: string
      responses:
        '204':
          description: Payment deleted successfully
        '404':
          description: Payment not found

  /v1/payments/process:
    post:
      tags:
        - Process Payments
      summary: Process a payment
      description: Process a payment for a specific ticket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid payment request
        '500':
          description: Internal server error

components:
  schemas:
    Payment:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the payment
        ticketId:
          type: string
          description: ID of the ticket associated with the payment
        amount:
          type: number
          format: float
          description: Amount paid
        status:
          type: string
          description: Status of the payment
          enum:
            - pending
            - completed
            - failed
        paymentMethod:
          type: string
          description: Payment method used
          enum:
            - credit_card
            - debit_card
            - paypal
            - cash
        createdAt:
          type: string
          format: date-time
          description: Creation date
        updatedAt:
          type: string
          format: date-time
          description: Last update date

    PaymentRequest:
      type: object
      properties:
        ticketId:
          type: string
          description: ID of the ticket to be paid
        amount:
          type: number
          format: float
          description: Amount to be paid
        paymentMethod:
          type: string
          description: Payment method to be used
          enum:
            - credit_card
            - debit_card
            - paypal
            - cash
      required:
        - ticketId
        - amount
        - paymentMethod