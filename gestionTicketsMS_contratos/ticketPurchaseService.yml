openapi: '3.0.3'
info:
  title: Cinema Ticket Management API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /v1/tickets/purchase:
    post:
      tags:
        - Cinema Tickets
      summary: Purchase a ticket
      description: Reserve seats, create a ticket, and process payment in a single request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  # /v1/tickets/{id}:
  #   get:
  #     tags:
  #       - Cinema Tickets
  #     summary: Get a ticket by ID
  #     description: Retrieve details of a specific ticket by its ID.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID of the ticket to retrieve.
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Ticket details retrieved successfully
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/TicketResponse'
  #       '404':
  #         description: Ticket not found
  #       '500':
  #         description: Internal server error
  #   delete:
  #     tags:
  #       - Cinema Tickets
  #     summary: Delete a ticket by ID
  #     description: Remove a specific ticket from the system.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         description: ID of the ticket to delete.
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '204':
  #         description: Ticket deleted successfully
  #       '404':
  #         description: Ticket not found
  #       '500':
  #         description: Internal server error

components:
  schemas:
    # Ticket:
    #   type: object
    #   properties:
    #     id:
    #       type: string
    #       format: uuid
    #       description: Unique ID of the ticket
    #     reservationId:
    #       type: string
    #       format: uuid
    #       description: ID of the reservation the ticket is associated with
    #     price:
    #       type: number
    #       format: float
    #       description: Price of the ticket
    #     status:
    #       type: string
    #       description: Status of the ticket
    #       enum:
    #         - purchased
    #         - canceled

    TicketRequest:
      type: object
      properties:
        seatIds:
          type: array
          items:
            type: string
            format: uuid
          description: List of IDs of the seats reserved for the ticket
        email:
          type: string
          format: email
          description: Email address of the customer for notifications
        paymentDetails:
          type: object
          description: Payment details for processing the ticket purchase
          properties:
            cardNumber:
              type: string
              description: Credit or debit card number
            cardHolderName:
              type: string
              description: Name of the cardholder
            expirationDate:
              type: string
              description: Expiration date of the card (MM/YY format)
            cvv:
              type: string
              description: CVV code of the card
      required:
        - seatIds
        - email
        - paymentDetails

    TicketResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the ticket
        seats:
          type: array
          items:
            type: string
          description: List of seats that were successfully reserved, shows their room, row and number
        reservedBy:
          type: string
          description: Name of the user who made the reservation
        showTitle:
          type: string
          description: Title of the show for which the seats were reserved
        showtime:
          type: string
          description: Show time for the reservation
        price:
          type: number
          format: float
          description: Price of the ticket
        status:
          type: string
          description: Status of the ticket
          enum:
            - PURCHASED
            - CANCELED