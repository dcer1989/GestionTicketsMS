openapi: '3.0.3'
info:
  title: Cinema Ticket Management API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /v1/tickets:
    post:
      tags:
        - Cinema Tickets
      summary: Create a new ticket
      description: Create a new ticket for a specific show and seat.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /v1/tickets/{id}:
    get:
      tags:
        - Cinema Tickets
      summary: Get a ticket by ID
      description: Retrieve details of a specific ticket by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to retrieve.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Ticket details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '404':
          description: Ticket not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Cinema Tickets
      summary: Delete a ticket by ID
      description: Remove a specific ticket from the system.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Ticket deleted successfully
        '404':
          description: Ticket not found
        '500':
          description: Internal server error

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the ticket
        showId:
          type: string
          format: uuid
          description: ID of the show the ticket is associated with
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        seatId:
          type: string
          format: uuid
          description: ID of the seat reserved for the ticket
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
        status:
          type: string
          description: Status of the ticket
          enum:
            - pending
            - purchased
            - canceled

    TicketRequest:
      type: object
      properties:
        showId:
          type: string
          format: uuid
          description: ID of the show the ticket is associated with
        seatId:
          type: string
          format: uuid
          description: ID of the seat reserved for the ticket
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
      required:
        - seatId
        - customerName
        - price

    TicketResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique ID of the ticket
        showId:
          type: string
          format: uuid
          description: ID of the show the ticket is associated with
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        seatId:
          type: string
          format: uuid
          description: ID of the seat reserved for the ticket
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
        status:
          type: string
          description: Status of the ticket
          enum:
            - pending
            - purchased
            - canceled