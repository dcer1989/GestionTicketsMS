openapi: '3.0.3'
info:
  title: Cinema Ticket Management API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /tickets:
    get:
      tags:
        - Cinema Tickets
      summary: Get all tickets
      description: Retrieve a list of all tickets.
      responses:
        '200':
          description: List of all tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
    post:
      tags:
        - Cinema Tickets
      summary: Create a new ticket
      description: Create a new ticket for a specific program and seat.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /tickets/{id}:
    get:
      tags:
        - Cinema Tickets
      summary: Get a ticket by ID
      description: Retrieve details of a specific ticket by its ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Ticket details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '404':
          description: Ticket not found
        '500':
          description: Internal server error
    put:
      tags:
        - Cinema Tickets
      summary: Update a ticket by ID
      description: Update the details of a specific ticket.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketRequest'
      responses:
        '200':
          description: Ticket updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Invalid input
        '404':
          description: Ticket not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Cinema Tickets
      summary: Delete a ticket by ID
      description: Remove a specific ticket from the system.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to delete.
          schema:
            type: string
      responses:
        '204':
          description: Ticket deleted successfully
        '404':
          description: Ticket not found
        '500':
          description: Internal server error

  /tickets/{id}/status:
    put:
      tags:
        - Cinema Tickets
      summary: Update ticket status
      description: Update the status of a ticket (e.g., `purchased`, `canceled`).
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the ticket to update the status for.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketStatusRequest'
      responses:
        '200':
          description: Ticket status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
        '400':
          description: Invalid input
        '404':
          description: Ticket not found
        '500':
          description: Internal server error

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the ticket
        programId:  
          type: string
          description: ID of the program the ticket is associated with
        showId:
          type: string
          description: ID of the show the ticket is associated with
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        seatId:
          type: string
          description: ID of the seat reserved for the ticket
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
        status:
          type: string
          description: Status of the ticket
          enum:
            - purchased
            - canceled

    TicketRequest:
      type: object
      properties:
        programId:
          type: string
          description: ID of the program the ticket is associated with
        showId:
          type: string
          description: ID of the show the ticket is associated with
        seatId:
          type: string
          description: ID of the seat reserved for the ticket
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
      required:
        - programId
        - seatId
        - customerName
        - price

    TicketResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the ticket
        programId:
          type: string
          description: ID of the program the ticket is associated with
        showId:
          type: string
          description: ID of the show the ticket is associated with
        showTime:
          type: string
          description: Showtime of the show the ticket is associated with
        seatId:
          type: string
          description: ID of the seat reserved for the ticket
        customerName:
          type: string
          description: Name of the customer
        price:
          type: number
          format: float
          description: Price of the ticket
        status:
          type: string
          description: Status of the ticket
          enum:
            - purchased
            - canceled
        createdAt:
          type: string
          format: date-time
          description: Creation date
        updatedAt:
          type: string
          format: date-time
          description: Last update date

    TicketStatusRequest:
      type: object
      properties:
        status:
          type: string
          description: New status of the ticket
          enum:
            - purchased
            - canceled
      required:
        - status