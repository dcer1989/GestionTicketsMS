@startuml SequenceDiagram

actor Client
participant "Frontend" as FE
participant "Shows Service" as ShowsService
participant "Seat Booking Service" as SeatBookingService
participant "Ticket Purchase Service" as TicketPurchaseService
participant "Payment Service" as PaymentService
participant "Notification Service" as NotificationService
participant "Promotion Service" as PromotionService
participant "Message Queue" as MQ

' Flujo: Cliente visualiza horarios de programas
Client -> FE: Request Showtimes
FE -> ShowsService: Get Showtimes
ShowsService --> FE: Return Showtimes

' Flujo: Cliente selecciona asiento
Client -> FE: Reserve Seat and Purchase Ticket for reserved seats
FE -> SeatBookingService: Get Seats
SeatBookingService --> FE: Return Seats

' Flujo: Cliente selecciona compra ticket
FE -> SeatBookingService: Reserve seats
SeatBookingService --> FE : Seats Reserved
FE -> TicketPurchaseService: Purchase Ticket (has Promotion?)
TicketPurchaseService -> PromotionService: Validate Promotion (Synchronous)
PromotionService --> TicketPurchaseService: Promotion Validated
TicketPurchaseService -> TicketPurchaseService: Create Ticket(s) Purchase with Promotion applied
TicketPurchaseService -> SeatBookingService: Validate Seats (seatIds, showId) 
SeatBookingService -> SeatBookingService: Check seat status and expiration

alt All seats valid
    SeatBookingService --> TicketPurchaseService: Validation successful
    TicketPurchaseService -[#green]-> MQ: Publish TicketCreated with final price

    ' Procesamiento del pago
    MQ -[#green]-> PaymentService: Consume TicketCreated
    PaymentService -> PaymentService: Process Payment (completed/failed)
    PaymentService -[#green]-> MQ: Publish PaymentProcessed

    ' Actualización del estado del ticket
    MQ -[#green]-> TicketPurchaseService: Consume PaymentProcessed
    TicketPurchaseService -> TicketPurchaseService: Update Ticket Status (purchased/canceled)
    TicketPurchaseService -[#green]-> MQ: Publish TicketPurchased (Status Updated)

    ' Flujo: Actualización de asientos
    MQ -[#green]-> SeatBookingService: Consume TicketPurchased
    SeatBookingService -> SeatBookingService: Update seats status (occupied/available)

    ' Notificación al cliente
    MQ -[#green]-> NotificationService: Consume PaymentProcessed
    NotificationService --> Client: Send Payment Notification
else Some seats invalid
    SeatBookingService --> TicketPurchaseService: Validation failed (invalidSeats)
    TicketPurchaseService --> FE: Return error
end

@enduml